int counted;
	int ccounted;
	int total;
	int splitter;
	int	insert_here;
	counted = 0;
	ccounted = 0;
	total = 0;
	splitter = 6;
	insert_here = 0;
	if ((arr->count) > 50)
		splitter = 1;

	if ((arr->count) > 250)
		splitter = 5;

	while (total < (arr->count))
	{
		while ((ft_lstvalsize((*arr->b)) < (arr->count / splitter)))
		{
			if ((*arr->b))
			{
				int searched_position = ft_findpos_list((*arr->b), (*arr->a)->value);
				ft_putstr_fd("SEARCHED POSITION: ", 1);
				ft_putnbr_fd(searched_position, 1);
				while (insert_here != searched_position)
				{
					ft_rb(&arr);
					insert_here++;
				}
			}
			ft_pb(&arr);
			insert_here = 0;
		}
		while (ft_lstvalsize((*arr->b)) != 0)
		{
			t_val *biggest = ft_get_biggest((*arr->b));
			int position = ft_find_position((*arr->b), biggest->value);
			while ((*arr->b)->value != biggest->value)
			{
				if (position < (ft_lstvalsize((*arr->b)) / 2))
					ft_rb(&arr);
				else
					ft_rrb(&arr);
			}
			ft_pa(&arr);
			total++;
			insert_here = 0;
		}

		while (ccounted < (arr->count / splitter))
		{
			ccounted++;
			ft_rra(&arr);
		}
		ccounted = 0;
	}